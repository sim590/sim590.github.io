<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Techno on Simon Désaulniers</title>
    <link>https://sim590.github.io/fr/categories/techno/</link>
    <description>Recent content in Techno on Simon Désaulniers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <managingEditor>sim.desaulniers@gmail.com (Simon Désaulniers)</managingEditor>
    <webMaster>sim.desaulniers@gmail.com (Simon Désaulniers)</webMaster>
    <copyright>©2020 Simon Désaulniers, All Rights Reserved</copyright>
    <lastBuildDate>Thu, 29 Dec 2022 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://sim590.github.io/fr/categories/techno/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Contrôle intégré de MPD sur la Steam Deck</title>
        <link>https://sim590.github.io/fr/steamdeck/mpd-music-control/</link>
        <pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate>
        <author>sim.desaulniers@gmail.com (Simon Désaulniers)</author>
        <atom:modified>Thu, 29 Dec 2022 00:00:00 +0000</atom:modified>
        <guid>https://sim590.github.io/fr/steamdeck/mpd-music-control/</guid>
        <description>&lt;p&gt;En tant que vétéran (GNU)Linux aguerri et de fan de technos libres, je me suis
donné l&amp;rsquo;occasion d&amp;rsquo;expérimenter plusieurs programmes dont j&amp;rsquo;ai développé une
dépendance avec certains d&amp;rsquo;eux, et avec raison. C&amp;rsquo;est le cas du programme MPD
(Music Player Daemon) qui est un programme de lecture de musique roulant en mode
serveur. On l&amp;rsquo;utilise donc normalement en pair avec un client comme &lt;a href=&#34;https://github.com/SoongNoonien/mpdevil&#34;&gt;mpdevil&lt;/a&gt;.
Personnellement, j&amp;rsquo;utilise &lt;a href=&#34;https://github.com/arybczak/ncmpcpp&#34;&gt;ncmpcpp&lt;/a&gt; et il y a une &lt;a href=&#34;https://www.musicpd.org/clients/&#34;&gt;longue liste de
clients&lt;/a&gt; pour MPD avec des fonctionnalités variées. Depuis que j&amp;rsquo;ai
reçu ma Steam Deck, j&amp;rsquo;ai donc bien sûr installé MPD sur celle-ci afin de pouvoir
contrôler avec mon téléphone (via &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.namelessdev.mpdroid&amp;amp;gl=US&amp;amp;pli=1&#34;&gt;MPDroid&lt;/a&gt;) la musique qui joue sur ma Steam
Deck connectée à ma télé ou à mes écouteurs Bluetooth. Par contre, je n&amp;rsquo;avais
pas encore de moyen de contrôler MPD par la Steam Deck directement autrement
qu&amp;rsquo;en utilisant une app graphique comme mpdevil, mais c&amp;rsquo;était handicapant
considérant le type de contrôle (joystick ou trackpad) à notre disposition.
Parfois, on peut se trouver à utiliser la Steam Deck avec une manette bluetooth,
donc on n&amp;rsquo;a pas envie d&amp;rsquo;une interface qui est prévue pour la souris, quand on
n&amp;rsquo;a qu&amp;rsquo;un joystick à portée de main.&lt;/p&gt;</description>
        
        <dc:creator>Simon Désaulniers</dc:creator>
        
        
        <media:content url="https://sim590.github.io/images/steamdeck/mpd/mpd.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>Steam Deck</category>
            
          
            
              <category>mpd</category>
            
          
            
              <category>MusicControl</category>
            
          
            
              <category>Decky</category>
            
          
            
              <category>Greffon</category>
            
          
        
        
          
            
              <category>Techno</category>
            
          
        
        
      </item>
      
      <item>
        <title>Transformer sa Steam Deck en Chromecast?</title>
        <link>https://sim590.github.io/fr/steamdeck/serveur-mpv/</link>
        <pubDate>Sun, 09 Oct 2022 00:00:00 +0000</pubDate>
        <author>sim.desaulniers@gmail.com (Simon Désaulniers)</author>
        <atom:modified>Sun, 09 Oct 2022 00:00:00 +0000</atom:modified>
        <guid>https://sim590.github.io/fr/steamdeck/serveur-mpv/</guid>
        <description>&lt;p&gt;J&amp;rsquo;avais commandé une &lt;a href=&#34;https://www.steamdeck.com/fr/&#34;&gt;Steam Deck&lt;/a&gt;, un terminal mobile (selon &lt;a href=&#34;https://gdt.oqlf.gouv.qc.ca/ficheOqlf.aspx?Id_Fiche=8360495&#34;&gt;la traduction de
l&amp;rsquo;OQLF&lt;/a&gt;) basé sur &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Archlinux&lt;/a&gt;, dès le moment que j&amp;rsquo;ai appris l&amp;rsquo;existence de ce
projet par &lt;a href=&#34;https://www.valvesoftware.com/&#34;&gt;Valve&lt;/a&gt;. Ce terminal mobile est en fait un ordinateur complet ayant comme principale
fonction de fournir une plateforme de jeu portable, mais en réalité il permet une panoplie de choses
qui la rend capable de surpasser la compétition.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://sim590.github.io/images/steamdeck/steamdeck.png&#34; alt=&#34;steamdeck&#34;&gt;&lt;/p&gt;
&lt;p&gt;Pourquoi ? Pour plusieurs raisons, mais principalement parce que je crois que c&amp;rsquo;est un appareil qui
jouera un rôle central dans le cheminement de GNU/Linux vers un statut de système plus populaire
chez les gens moins techniques et non initiés.&lt;/p&gt;</description>
        
        <dc:creator>Simon Désaulniers</dc:creator>
        
        
        <media:content url="https://sim590.github.io/images/steamdeck/mpv/mpv.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>Steam Deck</category>
            
          
            
              <category>mpv</category>
            
          
        
        
          
            
              <category>Techno</category>
            
          
        
        
      </item>
      
      <item>
        <title>Debian: passer à «testing»</title>
        <link>https://sim590.github.io/fr/debian/passer-%C3%A0-testing/</link>
        <pubDate>Sat, 09 May 2020 20:36:40 -0400</pubDate>
        <author>sim.desaulniers@gmail.com (Simon Désaulniers)</author>
        <atom:modified>Sat, 09 May 2020 20:36:40 -0400</atom:modified>
        <guid>https://sim590.github.io/fr/debian/passer-%C3%A0-testing/</guid>
        <description>&lt;p&gt;Debian est une des distributions de GNU/Linux les plus communes et robustes
grâce à son système de publication de version structuré et méticuleux. Les
versions passent par différents stades de développement appelés «branches». On
peut voir ces branches comme des «versions» de Debian qui ne sont pas figées
dans le temps contrairement aux publications de Debian. Par exemple, Buster est
le nom de la dernière version publiée par Debian à ce jour et la branche
correspondant à Debian est appelée &lt;code&gt;stable&lt;/code&gt;. Par défaut, il s&amp;rsquo;agit de la branche
avec laquelle Debian s&amp;rsquo;installe. Comme le système de paquetage inclut d&amp;rsquo;abord
les paquets dans la branche &lt;code&gt;unstable&lt;/code&gt;, puis &lt;code&gt;testing&lt;/code&gt; et finalement &lt;code&gt;stable&lt;/code&gt;,
les versions prennent un certains temps à aboutir. Ce faisant, ceci garantie une
stabilité aux utilisateurs (d&amp;rsquo;où le nom de la branche). Ceci dit, certains
utilisateurs plus avancés ayant le désir d&amp;rsquo;un système plus à jour peuvent
configurer leur système afin que celui-ci passe à &lt;code&gt;testing&lt;/code&gt;. Ce processus est
très commun parmi les utilisateurs avancés et comporte pratiquement très peu
d&amp;rsquo;inconvénients. Pour plus d&amp;rsquo;information par rapport aux branches, voyez les
différents liens ci-après:&lt;/p&gt;</description>
        
        <dc:creator>Simon Désaulniers</dc:creator>
        
        
        <media:content url="https://sim590.github.io/images/debian/Debian_logo.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>GNU/Linux</category>
            
          
            
              <category>Aptitude</category>
            
          
            
              <category>Paquet Debian</category>
            
          
            
              <category>Branche Debian</category>
            
          
        
        
          
            
              <category>Debian</category>
            
          
            
              <category>Techno</category>
            
          
        
        
      </item>
      
      <item>
        <title>fzf: comment optimiser son utilisation de la ligne de commande</title>
        <link>https://sim590.github.io/fr/outils/fzf/</link>
        <pubDate>Sat, 11 Apr 2020 00:42:27 -0400</pubDate>
        <author>sim.desaulniers@gmail.com (Simon Désaulniers)</author>
        <atom:modified>Sat, 11 Apr 2020 00:42:27 -0400</atom:modified>
        <guid>https://sim590.github.io/fr/outils/fzf/</guid>
        <description>&lt;p&gt;&lt;code&gt;fzf&lt;/code&gt; est un programme filtrant le flux de son entrée standard par mots clefs
fournis par l&amp;rsquo;utilisateur de manière interactive. Le filtre est du type &lt;em&gt;fuzzy&lt;/em&gt;
(d&amp;rsquo;où le nom &lt;em&gt;fzf&lt;/em&gt; pour &lt;em&gt;fuzzy finder&lt;/em&gt;), c&amp;rsquo;est-à-dire que les termes fournis au
programme sont décomposés en sous-mots afin de permettre des recherches
approximatives par l&amp;rsquo;utilisateur. Par exemple, prenons l&amp;rsquo;entrée suivante:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plain&#34; data-lang=&#34;plain&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;toto
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;titi
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tutu
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Si l&amp;rsquo;utilisateur fournissait le terme &lt;code&gt;tt&lt;/code&gt;, toutes les lignes seraient
sélectionnées, puisque les sous-mots &lt;code&gt;t&lt;/code&gt; et &lt;code&gt;t&lt;/code&gt; se trouvent tous deux dans
toutes les lignes. Cependant, avec le terme de recherche &lt;code&gt;oo&lt;/code&gt;, seul la première
ligne correspondrait avec le mot &lt;code&gt;toto&lt;/code&gt; selon le même raisonnement.&lt;/p&gt;</description>
        
        <dc:creator>Simon Désaulniers</dc:creator>
        
        
        <media:content url="https://sim590.github.io/images/fzf/fzf-logo.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>GNU/Linux</category>
            
          
            
              <category>Productivité</category>
            
          
            
              <category>Vim</category>
            
          
            
              <category>zsh</category>
            
          
            
              <category>ranger</category>
            
          
            
              <category>pass</category>
            
          
        
        
          
            
              <category>Techno</category>
            
          
            
              <category>Outil</category>
            
          
        
        
      </item>
      
      <item>
        <title>Vim peut tout faire</title>
        <link>https://sim590.github.io/fr/vim/vim-peut-tout-faire/</link>
        <pubDate>Sun, 22 Mar 2020 11:11:56 -0400</pubDate>
        <author>sim.desaulniers@gmail.com (Simon Désaulniers)</author>
        <atom:modified>Sun, 22 Mar 2020 11:11:56 -0400</atom:modified>
        <guid>https://sim590.github.io/fr/vim/vim-peut-tout-faire/</guid>
        <description>&lt;p&gt;Vim est un &lt;a href=&#34;https://fr.wikipedia.org/wiki/%C3%89diteur_de_texte&#34;&gt;éditeur de texte&lt;/a&gt; et clairement le meilleur qui soit. Je ne
dis pas ça sans peser mes mots. Ceci dit, il ne faut pas lui prêter une identité
qu&amp;rsquo;il n&amp;rsquo;a pas. Vim n&amp;rsquo;est pas un environnement de développement intégré (EDI ou
IDE en anglais) complet.  Cependant, plusieurs aspects à son utilisation font sa
grande force pour fournir un EDI complet à son usager:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;un &lt;strong&gt;langage de touches&lt;/strong&gt; permettant aux doigts de faire tout le travail
d&amp;rsquo;édition de texte (couper, effacer, coller, réordonner, formater, etc.). En
effet, dans une boîte de texte régulière (comme ce qu&amp;rsquo;on trouve dans les EDIs
populaires) la modification de texte, et non la simple écriture, n&amp;rsquo;est pas
chose facile. Elle demande souvent l&amp;rsquo;utilisation de la souris, donc la perte
de la position des mains déjà en place pour écrire. De plus, cette approche
est normalement très lente. Avec Vim, les doigts font le travail. La meilleure
comparaison pour comprendre le sentiment est justement celle de l&amp;rsquo;écriture. On
ne pense pas à trouver les touches pour écrire et cela se fait
automatiquement. Pour la modification de texte avec Vim, c&amp;rsquo;est la même chose.&lt;/li&gt;
&lt;li&gt;un &lt;strong&gt;langage de script&lt;/strong&gt; (&lt;em&gt;VimScript&lt;/em&gt;) qui lui permet une haute extensibilité;&lt;/li&gt;
&lt;li&gt;une &lt;strong&gt;intégration de l&amp;rsquo;interface système&lt;/strong&gt; (IS ou le &lt;em&gt;shell&lt;/em&gt; en anglais).
L&amp;rsquo;utilisation de l&amp;rsquo;IS est entièrement intégrée à travers VimScript ainsi que
les différents modes de Vim (Normal, Visual, CMD, etc.). Je ne peux mettre
assez l&amp;rsquo;accent sur comment ce trait de Vim est &lt;strong&gt;si significatif&lt;/strong&gt;. Ce
faisant, de manière totalement gratuite, un utilisateur de Vim bénéficie déjà
des fonctionnalités de l&amp;rsquo;IS dans son éditeur de texte sans avoir recours à
l&amp;rsquo;installation très particulière d&amp;rsquo;extension par son EDI. On dit souvent que
l&amp;rsquo;IS constitue en réalité l&amp;rsquo;environnement de développement d&amp;rsquo;un utilisateur de
Vim.&lt;/li&gt;
&lt;li&gt;une capacité d&amp;rsquo;intégrer des &lt;strong&gt;greffons&lt;/strong&gt; (&lt;em&gt;plugins&lt;/em&gt; en anglais);&lt;/li&gt;
&lt;li&gt;et une &lt;strong&gt;communauté de développeurs&lt;/strong&gt; très investie dans le partage de code et
d&amp;rsquo;outils qui rendent l&amp;rsquo;intégration d&amp;rsquo;outils de développement aisée et
facilement personnalisable.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Le tout fait de Vim le choix idéal. Dans ce qui suit, je prends le temps de
développer concrètement mon point de vue en m&amp;rsquo;attardant à des préoccupations
très importantes de tout développeur, mais selon ma perspective, bien entendu.
Je compte donc explorer le mode Normal de Vim, l&amp;rsquo;intégration avec l&amp;rsquo;IS plus en
détail, l&amp;rsquo;intégration de &lt;a href=&#34;https://fr.wikipedia.org/wiki/GNU_Debugger&#34;&gt;GDB&lt;/a&gt; (depuis Vim 8) et les différents greffons
permettant une sensation d&amp;rsquo;EDI complet.&lt;/p&gt;</description>
        
        <dc:creator>Simon Désaulniers</dc:creator>
        
        
        <media:content url="https://sim590.github.io/images/vim/vim-peut-tout-faire/vim-all-the-things.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>Vim</category>
            
          
            
              <category>hjkl</category>
            
          
            
              <category>greffon</category>
            
          
        
        
          
            
              <category>Techno</category>
            
          
            
              <category>Outil</category>
            
          
            
              <category>Éditeur de texte</category>
            
          
            
              <category>Programmation</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
