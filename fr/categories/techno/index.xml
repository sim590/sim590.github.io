<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Techno on Simon Désaulniers</title>
    <link>https://sim590.github.io/fr/categories/techno/</link>
    <description>Recent content in Techno on Simon Désaulniers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <managingEditor>sim.desaulniers@gmail.com (Simon Désaulniers)</managingEditor>
    <webMaster>sim.desaulniers@gmail.com (Simon Désaulniers)</webMaster>
    <copyright>©2020 Simon Désaulniers, All Rights Reserved</copyright>
    <lastBuildDate>Thu, 29 Dec 2022 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://sim590.github.io/fr/categories/techno/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>Contrôle intégré de MPD sur la Steam Deck</title>
        <link>https://sim590.github.io/fr/steamdeck/mpd-music-control/</link>
        <pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate>
        <author>sim.desaulniers@gmail.com (Simon Désaulniers)</author>
        <atom:modified>Thu, 29 Dec 2022 00:00:00 +0000</atom:modified>
        <guid>https://sim590.github.io/fr/steamdeck/mpd-music-control/</guid>
        <description>En tant que vétéran (GNU)Linux aguerri et de fan de technos libres, je me suis donné l&amp;rsquo;occasion d&amp;rsquo;expérimenter plusieurs programmes dont j&amp;rsquo;ai développé une dépendance avec certains d&amp;rsquo;eux, et avec raison. C&amp;rsquo;est le cas du programme MPD (Music Player Daemon) qui est un programme de lecture de musique roulant en mode serveur. On l&amp;rsquo;utilise donc normalement en pair avec un client comme mpdevil. Personnellement, j&amp;rsquo;utilise ncmpcpp et il y a une longue liste de clients pour MPD avec des fonctionnalités variées.</description>
        
        <dc:creator>Simon Désaulniers</dc:creator>
        
        
        <media:content url="https://sim590.github.ioimages/steamdeck/mpd/mpd.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>Steam Deck</category>
            
          
            
              <category>mpd</category>
            
          
            
              <category>MusicControl</category>
            
          
            
              <category>Decky</category>
            
          
            
              <category>Greffon</category>
            
          
        
        
          
            
              <category>Techno</category>
            
          
        
        
      </item>
      
      <item>
        <title>Transformer sa Steam Deck en Chromecast?</title>
        <link>https://sim590.github.io/fr/steamdeck/serveur-mpv/</link>
        <pubDate>Sun, 09 Oct 2022 00:00:00 +0000</pubDate>
        <author>sim.desaulniers@gmail.com (Simon Désaulniers)</author>
        <atom:modified>Sun, 09 Oct 2022 00:00:00 +0000</atom:modified>
        <guid>https://sim590.github.io/fr/steamdeck/serveur-mpv/</guid>
        <description>J&amp;rsquo;avais commandé une Steam Deck, un terminal mobile (selon la traduction de l&amp;rsquo;OQLF) basé sur Archlinux, dès le moment que j&amp;rsquo;ai appris l&amp;rsquo;existence de ce projet par Valve. Ce terminal mobile est en fait un ordinateur complet ayant comme principale fonction de fournir une plateforme de jeu portable, mais en réalité il permet une panoplie de choses qui la rend capable de surpasser la compétition.
Pourquoi ? Pour plusieurs raisons, mais principalement parce que je crois que c&amp;rsquo;est un appareil qui jouera un rôle central dans le cheminement de GNU/Linux vers un statut de système plus populaire chez les gens moins techniques et non initiés.</description>
        
        <dc:creator>Simon Désaulniers</dc:creator>
        
        
        <media:content url="https://sim590.github.ioimages/steamdeck/mpv/mpv.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>Steam Deck</category>
            
          
            
              <category>mpv</category>
            
          
        
        
          
            
              <category>Techno</category>
            
          
        
        
      </item>
      
      <item>
        <title>Debian: passer à «testing»</title>
        <link>https://sim590.github.io/fr/debian/passer-%C3%A0-testing/</link>
        <pubDate>Sat, 09 May 2020 20:36:40 -0400</pubDate>
        <author>sim.desaulniers@gmail.com (Simon Désaulniers)</author>
        <atom:modified>Sat, 09 May 2020 20:36:40 -0400</atom:modified>
        <guid>https://sim590.github.io/fr/debian/passer-%C3%A0-testing/</guid>
        <description>Debian est une des distributions de GNU/Linux les plus communes et robustes grâce à son système de publication de version structuré et méticuleux. Les versions passent par différents stades de développement appelés «branches». On peut voir ces branches comme des «versions» de Debian qui ne sont pas figées dans le temps contrairement aux publications de Debian. Par exemple, Buster est le nom de la dernière version publiée par Debian à ce jour et la branche correspondant à Debian est appelée stable.</description>
        
        <dc:creator>Simon Désaulniers</dc:creator>
        
        
        <media:content url="https://sim590.github.ioimages/debian/Debian_logo.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>GNU/Linux</category>
            
          
            
              <category>Aptitude</category>
            
          
            
              <category>Paquet Debian</category>
            
          
            
              <category>Branche Debian</category>
            
          
        
        
          
            
              <category>Debian</category>
            
          
            
              <category>Techno</category>
            
          
        
        
      </item>
      
      <item>
        <title>fzf: comment optimiser son utilisation de la ligne de commande</title>
        <link>https://sim590.github.io/fr/outils/fzf/</link>
        <pubDate>Sat, 11 Apr 2020 00:42:27 -0400</pubDate>
        <author>sim.desaulniers@gmail.com (Simon Désaulniers)</author>
        <atom:modified>Sat, 11 Apr 2020 00:42:27 -0400</atom:modified>
        <guid>https://sim590.github.io/fr/outils/fzf/</guid>
        <description>fzf est un programme filtrant le flux de son entrée standard par mots clefs fournis par l&amp;rsquo;utilisateur de manière interactive. Le filtre est du type fuzzy (d&amp;rsquo;où le nom fzf pour fuzzy finder), c&amp;rsquo;est-à-dire que les termes fournis au programme sont décomposés en sous-mots afin de permettre des recherches approximatives par l&amp;rsquo;utilisateur. Par exemple, prenons l&amp;rsquo;entrée suivante:
1 2 3 toto titi tutu Si l&amp;rsquo;utilisateur fournissait le terme tt, toutes les lignes seraient sélectionnées, puisque les sous-mots t et t se trouvent tous deux dans toutes les lignes.</description>
        
        <dc:creator>Simon Désaulniers</dc:creator>
        
        
        <media:content url="https://sim590.github.ioimages/fzf/fzf-logo.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>GNU/Linux</category>
            
          
            
              <category>Productivité</category>
            
          
            
              <category>Vim</category>
            
          
            
              <category>zsh</category>
            
          
            
              <category>ranger</category>
            
          
            
              <category>pass</category>
            
          
        
        
          
            
              <category>Techno</category>
            
          
            
              <category>Outil</category>
            
          
        
        
      </item>
      
      <item>
        <title>Vim peut tout faire</title>
        <link>https://sim590.github.io/fr/vim/vim-peut-tout-faire/</link>
        <pubDate>Sun, 22 Mar 2020 11:11:56 -0400</pubDate>
        <author>sim.desaulniers@gmail.com (Simon Désaulniers)</author>
        <atom:modified>Sun, 22 Mar 2020 11:11:56 -0400</atom:modified>
        <guid>https://sim590.github.io/fr/vim/vim-peut-tout-faire/</guid>
        <description>Vim est un éditeur de texte et clairement le meilleur qui soit. Je ne dis pas ça sans peser mes mots. Ceci dit, il ne faut pas lui prêter une identité qu&amp;rsquo;il n&amp;rsquo;a pas. Vim n&amp;rsquo;est pas un environnement de développement intégré (EDI ou IDE en anglais) complet. Cependant, plusieurs aspects à son utilisation font sa grande force pour fournir un EDI complet à son usager:
un langage de touches permettant aux doigts de faire tout le travail d&amp;rsquo;édition de texte (couper, effacer, coller, réordonner, formater, etc.</description>
        
        <dc:creator>Simon Désaulniers</dc:creator>
        
        
        <media:content url="https://sim590.github.ioimages/vim/vim-peut-tout-faire/vim-all-the-things.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>Vim</category>
            
          
            
              <category>hjkl</category>
            
          
            
              <category>greffon</category>
            
          
        
        
          
            
              <category>Techno</category>
            
          
            
              <category>Outil</category>
            
          
            
              <category>Éditeur de texte</category>
            
          
            
              <category>Programmation</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>